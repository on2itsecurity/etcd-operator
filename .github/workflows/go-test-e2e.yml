name: Testing E2E
on:
  push:
    branches:    
      - main
  pull_request:
jobs:
  buildbase:
    name: docker-base
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out code into the Go module directory
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        id: buildx
        with:
          config: .github/buildkitd.toml
          version: v0.11.2
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          target: build-base
          push: false
          load: true

  test-e2e:
    name: E2E
    needs: buildbase
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
        id: go
      -
        name: Check out code into the Go module directory
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        id: buildx
        with:
          config: .github/buildkitd.toml
          version: v0.11.2
        uses: docker/setup-buildx-action@v3
      -
        name: Build e2e image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: test-e2e
          tags: ghcr.io/${{ github.repository_owner }}/etcd-operator-e2e:${{github.sha}}
          push: false
          load: true
      -
        name: Build operator image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ghcr.io/${{ github.repository_owner }}/etcd-operator:${{github.sha}}
          build-args: |
            REVISION=${{github.sha}}
          push: false
          load: true
          cache-to: type=gha
      -
        uses: AbsaOSS/k3d-action@v2.4.0
        name: "Create single k3d Cluster"
        with:
          cluster-name: test-cluster-1
          args: >-
            --image docker.io/rancher/k3s:v1.28.4-k3s2
            --agents 1
            --no-lb
            --k3s-arg "--disable=traefik,servicelb,metrics-server@server:*"
      -
        name: Test
        run: |
          export KUBECONFIG="${HOME}/.kube/config"
          k3d image import $TEST_IMAGE -c test-cluster-1 --verbose
          k3d image import $OPERATOR_IMAGE -c test-cluster-1 --verbose
          hack/ci/run_e2e
        env:
          GITHUB_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GITHUB_PACKAGE_REGISTRY_TOKEN }}
          OPERATOR_IMAGE: ghcr.io/${{ github.repository_owner }}/etcd-operator:${{github.sha}}
          TEST_AWS_SECRET: na
          TEST_S3_BUCKET: na
          TEST_NAMESPACE: default
          BUILD_IMAGE: false
          BUILD_E2E: false
          TEST_IMAGE: ghcr.io/${{ github.repository_owner }}/etcd-operator-e2e:${{github.sha}}
          PASSES: e2e

      - name: Show logs
        if: ${{ always() }}
        run: |
          ls -laR
          cat _output/logs/*
  go-unit-tests:
    name: go-unit-tests
    needs: buildbase
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out code into the Go module directory
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        id: buildx
        with:
          config: .github/buildkitd.toml
          version: v0.11.2
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          target: go-test
          push: false
          cache-from: type=gha
