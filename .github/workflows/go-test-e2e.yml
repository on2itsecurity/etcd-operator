name: Testing E2E
on:
  push:
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare e2e image
        run: |
          hack/build/e2e/docker_push
        env:
          TEST_IMAGE: ghcr.io/${{ github.repository_owner }}/etcd-operator-e2e:${{github.sha}}

      - name: Prepare operator image
        run: |
          hack/build/operator/build
          hack/build/backup-operator/build
          hack/build/restore-operator/build
          IMAGE=${OPERATOR_IMAGE} hack/build/docker_push
        env:
          OPERATOR_IMAGE: ghcr.io/${{ github.repository_owner }}/etcd-operator:${{github.sha}}
  test-e2e:
    name: E2E
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - uses: AbsaOSS/k3d-action@v2
        name: "Create single k3d Cluster with imported Registry"
        with:
          cluster-name: test-cluster-1
          args: >-
            --image docker.io/rancher/k3s:v1.23.5-k3s1
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: |
          docker pull $TEST_IMAGE
          docker pull $OPERATOR_IMAGE
          export KUBECONFIG="${HOME}/.kube/config"
          k3d image import $TEST_IMAGE -c test-cluster-1 --verbose
          k3d image import $OPERATOR_IMAGE -c test-cluster-1 --verbose
          hack/ci/run_e2e
        env:
          GITHUB_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GITHUB_PACKAGE_REGISTRY_TOKEN }}
          OPERATOR_IMAGE: ghcr.io/${{ github.repository_owner }}/etcd-operator:${{github.sha}}
          TEST_AWS_SECRET: na
          TEST_S3_BUCKET: na
          TEST_NAMESPACE: default
          BUILD_IMAGE: false
          BUILD_E2E: false
          TEST_IMAGE: ghcr.io/${{ github.repository_owner }}/etcd-operator-e2e:${{github.sha}}
          PASSES: e2e

      - name: Show logs
        if: ${{ always() }}
        run: |
          ls -laR
          cat _output/logs/*

#  test-e2eslow:
#    name: E2E slow
#    runs-on: ubuntu-latest
#    needs: prepare
#    steps:
#      - name: Set up Go 1.18
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.18
#        id: go
#
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v2.3.4
#
#      - name: KinD (Kubernetes in Docker) Action
#        uses: engineerd/setup-kind@v0.1.0
#
#      - name: Test
#        run: |
#          docker login docker.pkg.github.com -u marlinc -p "${GITHUB_PACKAGE_REGISTRY_TOKEN}"
#          docker pull $TEST_IMAGE
#          docker pull $OPERATOR_IMAGE
#          export KUBECONFIG="$(kind get kubeconfig-path)"
#          kind load docker-image $TEST_IMAGE
#          kind load docker-image $OPERATOR_IMAGE
#          kubectl create secret docker-registry --docker-server=docker.pkg.github.com --docker-username=marlinc --docker-password=${GITHUB_PACKAGE_REGISTRY_TOKEN} github
#          kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "github"}]}'
#          hack/ci/run_e2e
#        env:
#          GITHUB_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GITHUB_PACKAGE_REGISTRY_TOKEN }}
#          OPERATOR_IMAGE: docker.pkg.github.com/on2itsecurity/etcd-operator/operator:${{github.sha}}
#          TEST_AWS_SECRET: na
#          TEST_S3_BUCKET: na
#          TEST_NAMESPACE: default
#          BUILD_IMAGE: false
#          BUILD_E2E: false
#          TEST_IMAGE: docker.pkg.github.com/on2itsecurity/etcd-operator/etcd-operator-e2e:${{github.sha}}
#          PASSES: e2eslow
